


ARM Macro Assembler    Page 1 


    1 00000000         
    2 00000000         
    3 00000000         
    4 00000000                 AREA             asm_functions, CODE, READONLY
    5 00000000                 EXPORT           get_and_sort
    6 00000000         get_and_sort
    7 00000000         ; save current SP for a faster access 
    8 00000000         ; to parameters in the stack
    9 00000000 46EC            MOV              r12, sp
   10 00000002         ; save volatile registers
   11 00000002 E92D 4DF0       STMFD            sp!,{r4-r8,r10-r11,lr}
   12 00000006         
   13 00000006         ; CODE HERE
   14 00000006         ; r0 = indirizzo del vettore VETT
   15 00000006         ; r1 = il valore di VAL (8 bit)
   16 00000006         ; r2 = n (valore attualmente acquisito)
   17 00000006         
   18 00000006         ; r1= 7
   19 00000006         ; n = 4
   20 00000006         ;  [r3][r2]
   21 00000006         ; 10, 8, 7,   6, X, X, X
   22 00000006         
   23 00000006         ; r1 = 7
   24 00000006         ; n = 1
   25 00000006         ;  [r3][r2]
   26 00000006         ;   7,0,0,0,0,0,0
   27 00000006         
   28 00000006 4402            add              r2, r0, r2
   29 00000008         
   30 00000008 F1A2 0201 
                       loop    sub              r2, r2, #1  ; indirizzo della p
                                                            rima posizione libe
                                                            ra
   31 0000000C F1A2 0301       sub              r3, r2, #1  ; indirizzo dell'ul
                                                            tima posizione occu
                                                            pata
   32 00000010         
   33 00000010 4298            cmp              r0, r3      ; aggiorna i FLAGS
   34 00000012 D804            bhi              fine
   35 00000014         
   36 00000014 781C            ldrb             r4, [r3]    ; il valore dell'ul
                                                            timo elemento inser
                                                            ito
   37 00000016 428C            cmp              r4, r1      ;  
   38 00000018 D801            bhi              fine        ; MAGGIORE
   39 0000001A 7014            strb             r4, [r2]
   40 0000001C E7F4            b                loop
   41 0000001E         
   42 0000001E         
   43 0000001E 7011    fine    strb             r1, [r2]
   44 00000020 4608            mov              r0, r1
   45 00000022         
   46 00000022         
   47 00000022         ; restore volatile registers
   48 00000022 E8BD 8DF0       LDMFD            sp!,{r4-r8,r10-r11,pc}
   49 00000026         
   50 00000026                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\asm_funct.d -o.\asm_funct.o -I.\RTE\_Target_1 -IC:\Users\39347\A



ARM Macro Assembler    Page 2 


ppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\CMSIS\Core\Include -IC:\Users\39347\AppD
ata\Local\Arm\Packs\Keil\LPC1700_DFP\2.7.0\Device\Include --predefine="__EVAL S
ETA 1" --predefine="__UVISION_VERSION SETA 536" --predefine="_RTE_ SETA 1" --pr
edefine="LPC175x_6x SETA 1" --predefine="_RTE_ SETA 1" --list=.\asm_funct.lst R
IT\ASM_funct.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

asm_functions 00000000

Symbol: asm_functions
   Definitions
      At line 4 in file RIT\ASM_funct.s
   Uses
      None
Comment: asm_functions unused
fine 0000001E

Symbol: fine
   Definitions
      At line 43 in file RIT\ASM_funct.s
   Uses
      At line 34 in file RIT\ASM_funct.s
      At line 38 in file RIT\ASM_funct.s

get_and_sort 00000000

Symbol: get_and_sort
   Definitions
      At line 6 in file RIT\ASM_funct.s
   Uses
      At line 5 in file RIT\ASM_funct.s
Comment: get_and_sort used once
loop 00000008

Symbol: loop
   Definitions
      At line 30 in file RIT\ASM_funct.s
   Uses
      At line 40 in file RIT\ASM_funct.s
Comment: loop used once
4 symbols
338 symbols in table
